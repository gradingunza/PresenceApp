<!DOCTYPE html>
<html lang="fr">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Historique des Présences</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <script>
    tailwind.config = {
      theme: {
        extend: {
          colors: {
            primary: {
              50: '#f0f9ff',
              100: '#e0f2fe',
              600: '#0284c7',
              700: '#0369a1',
            }
          }
        }
      }
    }
  </script>
  <style>
    .presence-day {
      margin-bottom: 2.5rem;
      border-radius: 0.75rem;
      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.05), 0 2px 4px -1px rgba(0, 0, 0, 0.02);
      transition: all 0.3s ease;
    }
    .presence-day:hover {
      box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
    }
    .day-header {
      background: linear-gradient(135deg, #1e40af 0%, #1e3a8a 100%);
    }
    .user-avatar {
      background: linear-gradient(135deg, #93c5fd 0%, #60a5fa 100%);
    }
    .animate-fade-in {
      animation: fadeIn 0.5s ease-out;
    }
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(10px); }
      to { opacity: 1; transform: translateY(0); }
    }
  </style>
</head>
<body class="bg-gray-50 font-sans">
    @include('components/header_admin')
  <div class="container mx-auto px-4 py-8 max-w-7xl">
    <!-- Header -->
    <div class="flex flex-col md:flex-row justify-between items-start md:items-center mb-8 gap-4">
      <div>
        <h1 class="text-3xl font-bold text-gray-800">Historique des Présences</h1>
        <p class="text-gray-500 mt-1">Visualisation complète des pointages</p>
      </div>
      <a href="{{route('admin.dashboard')}}" class="px-6 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors flex items-center gap-2">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z" clip-rule="evenodd" />
        </svg>
        Retour
      </a>
    </div>

    @if(presences.length > 0)
      <!-- Group presences by date -->
      @let(groupedPresences = {})
      
      @each(presence in presences)
        @let(dateKey = presence.checkIn.toFormat('yyyy-MM-dd'))
        
        @if(!groupedPresences[dateKey])
          @assign(groupedPresences = { ...groupedPresences, [dateKey]: [] })
        @end
        
        @assign(groupedPresences[dateKey] = [...groupedPresences[dateKey], presence])
      @endeach
      
      <!-- Days list -->
      <div class="space-y-6">
        @each(day in Object.keys(groupedPresences).sort().reverse())
          @let(presencesForDay = groupedPresences[day])
          @let(dayDate = presencesForDay[0].checkIn.startOf('day'))
          @let(dayName = dayDate.setLocale('fr').toFormat("cccc"))
          @let(formattedDate = dayDate.toFormat("d LLLL yyyy"))
          
          <!-- Day card -->
          <div class="presence-day bg-white animate-fade-in">
            <!-- Day header with prominent date -->
            <div class="day-header px-6 py-4 rounded-t-lg">
              <div class="flex flex-col sm:flex-row sm:items-center justify-between">
                <div>
                  <h2 class="text-xl font-semibold text-white">
                    <span class="block sm:inline text-primary-100">{{ dayName | capitalize }}</span>
                    <span class="text-white font-medium">{{ formattedDate }}</span>
                  </h2>
                </div>
                <div class="mt-2 sm:mt-0">
                  <span class="inline-flex items-center px-3 py-1 rounded-full bg-white bg-opacity-20 text-sm font-medium text-white">
                    {{ presencesForDay.length }} présence(s)
                  </span>
                </div>
              </div>
            </div>
            
            <!-- Presences table -->
            <div class="overflow-x-auto">
              <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                  <tr>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Collaborateur</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Arrivée</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Départ</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Durée</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Statut</th>
                  </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-100">
                  @each(presence in presencesForDay)
                    <tr class="hover:bg-gray-50 transition-colors">
                      <!-- User column -->
                      <td class="px-6 py-4 whitespace-nowrap">
                        <div class="flex items-center">
                          <div class="user-avatar h-10 w-10 rounded-full flex items-center justify-center shadow-sm">
                            <span class="text-white font-medium text-lg">
                              {{ presence.user.firstName ? presence.user.firstName.charAt(0) : '?' }}
                            </span>
                          </div>
                          <div class="ml-4">
                            <div class="text-sm font-medium text-gray-900">
                              {{ presence.user.firstName || 'Utilisateur inconnu' }}
                            </div>
                            <div class="text-xs text-gray-500">
                              {{ presence.user.department || presence.user.role || '' }}
                            </div>
                          </div>
                        </div>
                      </td>
                      
                      <!-- Check-in column -->
                      <td class="px-6 py-4 whitespace-nowrap">
                        <div class="flex flex-col">
                          <span class="text-sm font-medium text-gray-900">
                            {{ presence.checkIn.toFormat('HH:mm') }}
                          </span>
                          <span class="text-xs text-gray-500 mt-1">
                            <span class="inline-flex items-center">
                              <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3 mr-1" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z" clip-rule="evenodd" />
                              </svg>
                              {{ presence.checkIn.toRelative() }}
                            </span>
                          </span>
                        </div>
                      </td>
                      
                      <!-- Check-out column -->
                      <td class="px-6 py-4 whitespace-nowrap">
                        @if(presence.checkOut)
                          <div class="flex flex-col">
                            <span class="text-sm font-medium text-gray-900">
                              {{ presence.checkOut.toFormat('HH:mm') }}
                            </span>
                            <span class="text-xs text-gray-500 mt-1">
                              <span class="inline-flex items-center">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3 mr-1" viewBox="0 0 20 20" fill="currentColor">
                                  <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z" clip-rule="evenodd" />
                                </svg>
                                {{ presence.checkOut.toRelative() }}
                              </span>
                            </span>
                          </div>
                        @else
                          <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800">
                            En cours...
                          </span>
                        @end
                      </td>
                      
                      <!-- Duration column -->
                      <td class="px-6 py-4 whitespace-nowrap">
                        @if(presence.checkIn && presence.checkOut)
                          @let(duration = presence.checkOut.diff(presence.checkIn, ['hours', 'minutes']))
                          <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-indigo-100 text-indigo-800">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" viewBox="0 0 20 20" fill="currentColor">
                              <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z" clip-rule="evenodd" />
                            </svg>
                            {{ duration.hours }}h{{ duration.minutes.toString().padStart(2, '0') }}
                          </span>
                        @else
                          <span class="text-gray-400 text-sm">-</span>
                        @end
                      </td>
                      
                      <!-- Status column -->
                      <td class="px-6 py-4 whitespace-nowrap">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium
                          {{ presence.status === 'present' ? 'bg-green-100 text-green-800' : '' }}
                          {{ presence.status === 'absent' ? 'bg-red-100 text-red-800' : '' }}
                          {{ presence.status === 'late' ? 'bg-yellow-100 text-yellow-800' : '' }}
                          {{ presence.status === 'remote' ? 'bg-purple-100 text-purple-800' : '' }}
                          {{ presence.status === 'mission' ? 'bg-blue-100 text-blue-800' : '' }}">
                          @if(presence.status === 'present')
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" viewBox="0 0 20 20" fill="currentColor">
                              <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
                            </svg>
                            Présent
                          @elseif(presence.status === 'absent')
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" viewBox="0 0 20 20" fill="currentColor">
                              <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd" />
                            </svg>
                            Absent
                          {{--@elseif(presence.status === 'late')
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" viewBox="0 0 20 20" fill="currentColor">
                              <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z" clip-rule="evenodd" />
                            </svg>
                            Retard--}}
                          @elseif(presence.status === 'remote')
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" viewBox="0 0 20 20" fill="currentColor">
                              <path d="M7 9a2 2 0 012-2h6a2 2 0 012 2v6a2 2 0 01-2 2H9a2 2 0 01-2-2V9z" />
                              <path d="M5 3a2 2 0 00-2 2v6a2 2 0 002 2V5h8a2 2 0 00-2-2H5z" />
                            </svg>
                            Télétravail
                          @else
                            {{ presence.status }}
                          @end
                        </span>
                      </td>
                    </tr>
                  @endeach
                </tbody>
              </table>
            </div>
          </div>
        @endeach
      </div>
    @else
      <!-- Empty state -->
      <div class="bg-white p-12 rounded-xl shadow-sm text-center border-2 border-dashed border-gray-200">
        <svg class="mx-auto h-16 w-16 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01" />
        </svg>
        <h3 class="mt-4 text-lg font-medium text-gray-900">Aucune présence enregistrée</h3>
        <p class="mt-2 text-sm text-gray-500 max-w-md mx-auto">
          Aucun pointage n'a été effectué pour le moment. Les présences apparaîtront ici une fois enregistrées.
        </p>
        <div class="mt-6">
          <a href="/" class="inline-flex items-center px-6 py-2 border border-transparent text-sm font-medium rounded-lg shadow-sm text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z" clip-rule="evenodd" />
            </svg>
            Retour à l'accueil
          </a>
        </div>
      </div>
    @endif
  </div>
   <script>
    document.addEventListener('DOMContentLoaded', function() {
      const burgerBtn = document.getElementById('burger-btn');
      const closeBtn = document.getElementById('close-menu-btn');
      const mobileMenu = document.getElementById('mobile-menu');

      function toggleMenu() {
        mobileMenu.classList.toggle('hidden');
        document.body.classList.toggle('overflow-hidden');
      }

      burgerBtn.addEventListener('click', toggleMenu);
      closeBtn.addEventListener('click', toggleMenu);

      mobileMenu.addEventListener('click', function(e) {
        if (e.target === mobileMenu) {
          toggleMenu();
        }
      });
    });
  </script>
</body>
</html>